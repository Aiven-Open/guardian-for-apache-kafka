# See https://github.com/akka/akka-http/issues/3201 and https://discuss.lightbend.com/t/about-nomoreelementsneeded-exception/8599

akka.http.client.stream-cancellation-delay = 1000 millis
akka.http.client.stream-cancellation-delay = ${?AKKA_HTTP_CLIENT_STREAM_CANCELLATION_DELAY}

akka.kafka.consumer = {
    poll-interval = ${?AKKA_KAFKA_CONSUMER_POLL_INTERVAL}
    poll-timeout = ${?AKKA_KAFKA_CONSUMER_POLL_TIMEOUT}
    stop-timeout = ${?AKKA_KAFKA_CONSUMER_STOP_TIMEOUT}
    close-timeout = ${?AKKA_KAFKA_CONSUMER_CLOSE_TIMEOUT}
    commit-timeout = ${?AKKA_KAFKA_CONSUMER_COMMIT_TIMEOUT}
    commit-time-warning = ${?AKKA_KAFKA_CONSUMER_COMMIT_TIME_WARNING}
    commit-refresh-interval = ${?AKKA_KAFKA_CONSUMER_COMMIT_REFRESH_INTERVAL}
    use-dispatcher = ${?AKKA_KAFKA_CONSUMER_USE_DISPATCHER}
    wait-close-partition = ${?AKKA_KAFKA_CONSUMER_WAIT_CLOSE_PARTITION}
    position-timeout = ${?AKKA_KAFKA_CONSUMER_POSITION_TIMEOUT}
    offset-for-times-timeout = ${?AKKA_KAFKA_OFFSET_FOR_TIMES_TIMEOUT}
    metadata-request-timeout = ${?AKKA_KAFKA_METADATA_REQUEST_TIMEOUT}
    eos-draining-check-interval = ${?AKKA_KAFKA_CONSUMER_EOS_DRAINING_CHECK_INTERVAL}
    eos-draining-check-interval = ${?AKKA_KAFKA_CONSUMER_EOS_DRAINING_CHECK_INTERVAL}
    connection-checker = {
        enable = ${?AKKA_KAFKA_CONSUMER_CONNECTION_CHECKER_ENABLE}
        max-retries = ${?AKKA_KAFKA_CONSUMER_CONNECTION_CHECKER_MAX_RETRIES}
        backoff-factor = ${?AKKA_KAFKA_CONSUMER_CONNECTION_CHECKER_BACKOFF_FACTOR}
        check-interval = ${?AKKA_KAFKA_CONSUMER_CONNECTION_CHECKER_CHECK_INTERVAL}
    }
    partition-handler-warning = ${?AKKA_KAFKA_CONSUMER_PARTITION_HANDLER_WARNING}
    offset-reset-protection = {
        enable = ${?AKKA_KAFKA_CONSUMER_OFFSET_RESET_PROTECTION_ENABLE}
        offset-threshold = ${?AKKA_KAFKA_CONSUMER_OFFSET_RESET_PROTECTION_OFFSET_THRESHOLD}
        time-threshold = ${?AKKA_KAFKA_CONSUMER_OFFSET_RESET_PROTECTION_TIME_THRESHOLD}
    }
}

akka.kafka.producer {
    discovery-method = ${?AKKA_KAFKA_PRODUCER_DISCOVERY_METHOD}
    service-name = ${?AKKA_KAFKA_PRODUCER_SERVICE_NAME}
    resolve-timeout = ${?AKKA_KAFKA_PRODUCER_RESOLVE_TIMEOUT}
    parallelism = ${?AKKA_KAFKA_PRODUCER_PARALLELISM}
    close-timeout = ${?AKKA_KAFKA_PRODUCER_CLOSE_TIMEOUT}
    close-on-producer-stop = ${?AKKA_KAFKA_PRODUCER_CLOSE_ON_PRODUCER_STOP}
    use-dispatcher = ${?AKKA_KAFKA_PRODUCER_USE_DISPATCHER}
    eos-commit-interval = ${?AKKA_KAFKA_PRODUCER_EOS_COMMIT_INTERVAL}
}

kafka-client = {
    bootstrap.servers = ${?KAFKA_CLIENT_BOOTSTRAP_SERVERS}
}

akka.kafka.committer = {
    max-batch = 100000
    max-batch = ${?AKKA_KAFKA_COMMITTER_MAX_BATCH}
    max-interval = 1 hour
    max-interval = ${?AKKA_KAFKA_COMMITTER_MAX_INTERVAL}
    parallelism = ${?AKKA_KAFKA_COMMITTER_PARALLELISM}
    parallelism = 10000
}

kafka-cluster = {
    topics = []
    topics = ${?KAFKA_CLUSTER_TOPICS}
}
